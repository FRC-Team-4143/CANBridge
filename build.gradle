plugins {
  id 'c'
  id 'cpp'
  id 'java'
  id 'edu.wpi.first.wpilib.versioning.WPILibVersioningPlugin' version '2.2'
  id 'edu.wpi.first.NativeUtils' version '2019.5.15'
  id 'edu.wpi.first.GradleJni' version '0.9.0'
  id 'edu.wpi.first.GradleVsCode' version '0.9.0'
}

apply from: 'config.gradle'

apply from: 'dependencies.gradle'

nativeUtils {
  exportsConfigs {
      RevUSB {
      }
  }
  privateExportsConfigs {
    CandleLib {
      exportsFile = project.file("src/main/native/c/candlelib/symbols.txt")
    }
  }
}

model {
  //libraries {
  //    candle_dll(NativeLib) {
  //    libraryName = 'candle_dll'
  //    targetPlatform = 'windowsx86-64'
  //    sharedMatchers << '**/*.lib'
  //    dynamicMatchers << '**/*.dll'
  //    file = project.file('lib/candle_dll/')
  //    }
  //}
  components {
    RevUSB(NativeLibrarySpec) {
      sources {
        cpp {
          source {
            srcDirs 'src/main/native/cpp'
            include '**/*.cpp'
          }
          exportedHeaders {
            srcDirs 'src/main/native/include'
          }
        }
      }
      binaries.all {
        lib library: "CandleLib", linkage: 'static'
        if (it.targetPlatform.name == nativeUtils.wpi.platforms.roborio) {
          it.buildable = false
        }
      }

      nativeUtils.useRequiredLibrary(it, "wpilib_shared")
    }
    CandleLib(NativeLibrarySpec) {
      sources {
        c {
          source {
            srcDirs 'src/main/native/c/candlelib/'
            include '**/*.c'
          }
          exportedHeaders {
            srcDirs 'src/main/native/include/candlelib'
          }
        }
      }
      binaries.all {
        if (it.targetPlatform.name == nativeUtils.wpi.platforms.roborio) {
          it.buildable = false
        }
      }
    }
    
  }
}

apply from: 'publish.gradle'

wrapper {
  gradleVersion = '5.4.1'
}
